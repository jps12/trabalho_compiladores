%
%  Eugene Wallingford 2013-1203
%
%  This program demonstrates how we can factor large numbers
%  that are the products of large primes.  This is one way
%  in which public-key cryptography can work.
%
%  http://en.wikipedia.org/wiki/Public-key_cryptography
%

main = f(publicKey  : integer,
         privateKey : integer  returns integer)
  if (publicKey = 0)             % as a flag for no arguments
     factor(2147481647,          % default public key
            2047483747)          % default private key
  else factor(publicKey,
              privateKey)

%
%  gcd(publicKey, privateKey) should work, even if
%  you have a small stack space and no optimization!
%

factor = f(publicKey  : integer,
           privateKey : integer  returns integer)
  displayAndPrint(publicKey,
                  privateKey,
                  gcd(publicKey, privateKey))

displayAndPrint = f(publicKey    : integer,
                    privateKey   : integer,
                    commonFactor : integer  returns integer)
  print(publicKey  / commonFactor)
  print(privateKey / commonFactor)
  commonFactor

%
%  finds the greatest common divisor using Euclid's algorithm
%

gcd = f(a : integer, b : integer returns integer)
  if (b = 0)
     a
  else
     gcd(b, remainder(a, b))

remainder = f(a : integer, b : integer returns integer)
  if (a < b)
     a
  else
     remainder(a-b, b)
